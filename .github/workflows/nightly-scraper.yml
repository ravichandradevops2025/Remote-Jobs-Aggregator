name: Nightly Job Scraper & Email Export

on:
  schedule:
    - cron: '30 19 * * *'  # 01:00 AM IST daily
  workflow_dispatch:  # Manual trigger

jobs:
  scrape-and-email:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Run job scraper and export
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
      run: |
        echo "üöÄ Starting daily job scraper at $(date)"
        python scripts/export_jobs.py
    
    - name: Generate timestamp for files
      id: timestamp
      run: |
        echo "timestamp=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_OUTPUT
        echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "jobs_count=$(python -c 'import json; data=json.load(open("scraped_jobs.json")); print(len(data.get("jobs", [])))')" >> $GITHUB_OUTPUT
    
    - name: Create zip package for email
      run: |
        zip -r "remote-jobs-${{ steps.timestamp.outputs.timestamp }}.zip" \
          scraped_jobs.json \
          job_browser.html \
          jobs_summary.txt
    
    - name: Upload artifacts (backup)
      uses: actions/upload-artifact@v4
      with:
        name: remote-jobs-${{ steps.timestamp.outputs.timestamp }}
        path: |
          scraped_jobs.json
          job_browser.html
          jobs_summary.txt
          remote-jobs-${{ steps.timestamp.outputs.timestamp }}.zip
        retention-days: 30
    
    - name: Send email with job data
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Daily Remote Jobs Report - ${{ steps.timestamp.outputs.date }} (${{ steps.timestamp.outputs.jobs_count }} jobs found)"
        to: ravichandra.devops2025@gmail.com
        from: Remote Jobs Bot <${{ secrets.EMAIL_USERNAME }}>
        html_body: |
          <h2>üìä Daily Remote Jobs Report</h2>
          <p><strong>Date:</strong> ${{ steps.timestamp.outputs.date }}</p>
          <p><strong>Total Jobs Found:</strong> ${{ steps.timestamp.outputs.jobs_count }}</p>
          <p><strong>Scraping Time:</strong> ${{ steps.timestamp.outputs.timestamp }}</p>
          
          <h3>üìÅ Files Attached:</h3>
          <ul>
            <li><strong>remote-jobs-${{ steps.timestamp.outputs.timestamp }}.zip</strong> - Complete job data package</li>
          </ul>
          
          <h3>üìã Quick Summary:</h3>
          <p>Your daily remote jobs have been collected and packaged. The zip file contains:</p>
          <ul>
            <li><code>scraped_jobs.json</code> - All job data with apply URLs</li>
            <li><code>job_browser.html</code> - Interactive web interface</li>
            <li><code>jobs_summary.txt</code> - Statistics and breakdown</li>
          </ul>
          
          <p><em>This automated report runs daily at 1:00 AM IST.</em></p>
        attachments: |
          remote-jobs-${{ steps.timestamp.outputs.timestamp }}.zip
    
    - name: Display summary in workflow
      run: |
        echo "## üìß Email Sent Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Recipient:** ravichandra.devops2025@gmail.com" >> $GITHUB_STEP_SUMMARY
        echo "**Jobs Found:** ${{ steps.timestamp.outputs.jobs_count }}" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** ${{ steps.timestamp.outputs.date }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        cat jobs_summary.txt >> $GITHUB_STEP_SUMMARY
